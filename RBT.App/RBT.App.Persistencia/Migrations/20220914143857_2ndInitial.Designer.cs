// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RBT.App.Persistencia;

#nullable disable

namespace RBT.App.Persistencia.Migrations
{
    [DbContext(typeof(AppContext))]
    [Migration("20220914143857_2ndInitial")]
    partial class _2ndInitial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("RBT.App.Dominio.Mantenimiento", b =>
                {
                    b.Property<int>("MantenimientoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MantenimientoId"), 1L, 1);

                    b.Property<string>("FechaMantenimiento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NivelAceite")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NivelLiquidoDireccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NivelLiquidoFrenos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NivelRefrigerante")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VehiculoId")
                        .HasColumnType("int");

                    b.HasKey("MantenimientoId");

                    b.HasIndex("VehiculoId");

                    b.ToTable("Mantenimientos");
                });

            modelBuilder.Entity("RBT.App.Dominio.Persona", b =>
                {
                    b.Property<int>("PersonaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonaId"), 1L, 1);

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FechaNacimiento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonaId");

                    b.ToTable("Personas");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Persona");
                });

            modelBuilder.Entity("RBT.App.Dominio.Reparacion", b =>
                {
                    b.Property<int>("ReparacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReparacionId"), 1L, 1);

                    b.Property<string>("FechaReparacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MantenimientoId")
                        .HasColumnType("int");

                    b.Property<string>("RepuestosCambiados")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ReparacionId");

                    b.HasIndex("MantenimientoId");

                    b.ToTable("Reparaciones");
                });

            modelBuilder.Entity("RBT.App.Dominio.Soat", b =>
                {
                    b.Property<int>("SoatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SoatId"), 1L, 1);

                    b.Property<string>("FechaCompra")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FechaVencimiento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VehiculoId")
                        .HasColumnType("int");

                    b.HasKey("SoatId");

                    b.HasIndex("VehiculoId");

                    b.ToTable("Soats");
                });

            modelBuilder.Entity("RBT.App.Dominio.Vehiculo", b =>
                {
                    b.Property<int>("VehiculoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehiculoId"), 1L, 1);

                    b.Property<string>("CaracteristicasExtra")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cilindraje")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MecanicoPersonaId")
                        .HasColumnType("int");

                    b.Property<string>("PaisOrigen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pasajero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PropietarioPersonaId")
                        .HasColumnType("int");

                    b.Property<string>("TipoVehiculo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VehiculoId");

                    b.HasIndex("MecanicoPersonaId");

                    b.HasIndex("PropietarioPersonaId");

                    b.ToTable("Vehiculos");
                });

            modelBuilder.Entity("RBT.App.Dominio.Auxiliar", b =>
                {
                    b.HasBaseType("RBT.App.Dominio.Persona");

                    b.HasDiscriminator().HasValue("Auxiliar");
                });

            modelBuilder.Entity("RBT.App.Dominio.JefeOperaciones", b =>
                {
                    b.HasBaseType("RBT.App.Dominio.Persona");

                    b.HasDiscriminator().HasValue("JefeOperaciones");
                });

            modelBuilder.Entity("RBT.App.Dominio.Mecanico", b =>
                {
                    b.HasBaseType("RBT.App.Dominio.Persona");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NivelEstudios")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Mecanico");
                });

            modelBuilder.Entity("RBT.App.Dominio.Propietario", b =>
                {
                    b.HasBaseType("RBT.App.Dominio.Persona");

                    b.Property<string>("CiudadResidencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Propietario");
                });

            modelBuilder.Entity("RBT.App.Dominio.UsuarioApp", b =>
                {
                    b.HasBaseType("RBT.App.Dominio.Persona");

                    b.HasDiscriminator().HasValue("UsuarioApp");
                });

            modelBuilder.Entity("RBT.App.Dominio.Mantenimiento", b =>
                {
                    b.HasOne("RBT.App.Dominio.Vehiculo", "Vehiculo")
                        .WithMany()
                        .HasForeignKey("VehiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehiculo");
                });

            modelBuilder.Entity("RBT.App.Dominio.Reparacion", b =>
                {
                    b.HasOne("RBT.App.Dominio.Mantenimiento", "Mantenimiento")
                        .WithMany()
                        .HasForeignKey("MantenimientoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mantenimiento");
                });

            modelBuilder.Entity("RBT.App.Dominio.Soat", b =>
                {
                    b.HasOne("RBT.App.Dominio.Vehiculo", "Vehiculo")
                        .WithMany()
                        .HasForeignKey("VehiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehiculo");
                });

            modelBuilder.Entity("RBT.App.Dominio.Vehiculo", b =>
                {
                    b.HasOne("RBT.App.Dominio.Mecanico", "Mecanico")
                        .WithMany()
                        .HasForeignKey("MecanicoPersonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RBT.App.Dominio.Propietario", "Propietario")
                        .WithMany()
                        .HasForeignKey("PropietarioPersonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mecanico");

                    b.Navigation("Propietario");
                });
#pragma warning restore 612, 618
        }
    }
}
